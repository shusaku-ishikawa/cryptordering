# Generated by Django 2.1.5 on 2019-08-31 09:22

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import unixtimestampfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='登録メールアドレス')),
                ('email_for_notice', models.EmailField(max_length=254, verbose_name='通知用メールアドレス')),
                ('full_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='名前')),
                ('bb_api_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='bitbank API KEY')),
                ('bb_api_secret_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='bitbank API SECRET KEY')),
                ('cc_api_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='coincheck API KEY')),
                ('cc_api_secret_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='coincheck API SECRET KEY')),
                ('notify_if_filled', models.BooleanField(default=True, verbose_name='約定通知')),
                ('use_alert', models.BooleanField(default=True, verbose_name='アラートメール通知')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='管理者')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='利用開始')),
                ('remaining_days', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='残日数')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '利用者',
                'verbose_name_plural': '1.利用者',
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(default='bitbank', max_length=50, verbose_name='取引所')),
                ('pair', models.CharField(default='btc_jpy', max_length=50, verbose_name='通貨')),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='通知レート')),
                ('over_or_under', models.CharField(max_length=50, verbose_name='上下')),
                ('alerted_at', models.DateTimeField(null=True, verbose_name='通知日時')),
                ('comment', models.CharField(blank=True, default='', max_length=255, verbose_name='コメント')),
                ('is_active', models.BooleanField(null=True, verbose_name='有効')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '通知設定',
                'verbose_name_plural': '4.通知設定',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments', verbose_name='ファイル')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='アップロード日時')),
            ],
            options={
                'verbose_name': '添付ファイル',
                'verbose_name_plural': '添付ファイル',
            },
        ),
        migrations.CreateModel(
            name='BankInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(default='xxx銀行', max_length=20, verbose_name='金融機関名')),
                ('branch', models.CharField(default='xxx支店', max_length=20, verbose_name='支店名')),
                ('meigi', models.CharField(default='xxxxx', max_length=50, verbose_name='口座名義人')),
                ('type', models.CharField(choices=[('普通', '普通'), ('当座', '当座')], default='普通', max_length=20, verbose_name='口座種別')),
                ('number', models.CharField(default='00000', max_length=20, verbose_name='口座番号')),
            ],
            options={
                'verbose_name': '口座情報',
                'verbose_name_plural': '6.口座情報',
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255, verbose_name='件名')),
                ('body', models.CharField(max_length=255, verbose_name='内容')),
                ('email_for_reply', models.EmailField(max_length=254, verbose_name='通知用メールアドレス')),
                ('closed', models.BooleanField(default=False, verbose_name='解決済')),
                ('date_initiated', models.DateTimeField(auto_now_add=True, verbose_name='問い合せ日時')),
                ('attachment_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='att_1', to='core.Attachment', verbose_name='添付ファイル1')),
                ('attachment_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='att_2', to='core.Attachment', verbose_name='添付ファイル2')),
                ('attachment_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='att_3', to='core.Attachment', verbose_name='添付ファイル3')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '問い合せ',
                'verbose_name_plural': '5.問い合せ',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(max_length=50, verbose_name='取引所')),
                ('pair', models.CharField(max_length=50, verbose_name='通貨')),
                ('side', models.CharField(max_length=50, verbose_name='売/買')),
                ('order_type', models.CharField(max_length=50, verbose_name='注文方法')),
                ('price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='注文価格')),
                ('price_for_stop', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ストップ価格')),
                ('trail_width', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='トレール幅')),
                ('trail_price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='トレール金額')),
                ('start_amount', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='注文数量')),
                ('remaining_amount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='未約定数量')),
                ('executed_amount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='約定済数量')),
                ('average_price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='約定平均価格')),
                ('status', models.CharField(max_length=50, null=True, verbose_name='ステータス')),
                ('error_message', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='エラー内容')),
                ('order_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='取引ID')),
                ('ordered_at', unixtimestampfield.fields.UnixTimeStampField(blank=True, null=True, verbose_name='注文時刻unixtime')),
                ('updated_at', unixtimestampfield.fields.UnixTimeStampField(auto_now=True, verbose_name='更新日時unixtimestamp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='利用者')),
            ],
            options={
                'verbose_name': '取引履歴',
                'verbose_name_plural': '3.取引履歴',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(default='bitbank', max_length=50, verbose_name='取引所')),
                ('pair', models.CharField(max_length=50, verbose_name='通貨')),
                ('special_order', models.CharField(max_length=50, verbose_name='特殊注文')),
                ('placed_at', models.DateTimeField(auto_now_add=True, verbose_name='注文日時')),
                ('is_locked', models.BooleanField(default=False, verbose_name='ロック中')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効')),
                ('order_1', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_order', to='core.Order', verbose_name='新規注文')),
                ('order_2', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settle_order_1', to='core.Order', verbose_name='決済注文1')),
                ('order_3', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settle_order_2', to='core.Order', verbose_name='決済注文2')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '発注一覧',
                'verbose_name_plural': '2.発注一覧',
            },
        ),
    ]
